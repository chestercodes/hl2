apiVersion: v1
kind: ConfigMap
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: pgadmin-config
data:
 config_distro.py: |
  # lines from original
  CA_FILE = '/etc/ssl/certs/ca-certificates.crt'
  LOG_FILE = '/dev/null'
  HELP_PATH = '../../docs'
  DEFAULT_BINARY_PATHS = {
          'pg': '/usr/local/pgsql-16',
          'pg-16': '/usr/local/pgsql-16',
          'pg-15': '/usr/local/pgsql-15',
          'pg-14': '/usr/local/pgsql-14',
          'pg-13': '/usr/local/pgsql-13',
          'pg-12': '/usr/local/pgsql-12'
  }
  # disable XSS
  X_CONTENT_TYPE_OPTIONS = ""    # default value is nosniff
  ENHANCED_COOKIE_PROTECTION = False
  X_XSS_PROTECTION = "0"  # default value is '1; mode=block'


 servers.json: |
   {
       "Servers": {
         "1": {
           "Name": "PostgreSQL DB",
           "Group": "Servers",
           "Port": 5432,
           "Host": "maindb",
           "MaintenanceDB": "postgres"
         }
       }
   }
 servers-orig.json: |
   {
       "Servers": {
         "1": {
           "Name": "PostgreSQL DB",
           "Group": "Servers",
           "Port": 5432,
           "Username": "postgres",
           "Host": "maindb",
           "SSLMode": "prefer",
           "MaintenanceDB": "postgres"
         }
       }
   }
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pgadmin-{{ .Release.Namespace }}-ingress
  namespace: {{ .Release.Namespace }}
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`pgadmin-{{ .Release.Namespace }}.local`)
      priority: 10
      services:
        - name: "pgadmin-service"
          port: 80
    - kind: Rule
      match: Host(`pgadmin-{{ .Release.Namespace }}.home.arpa`)
      priority: 10
      services:
        - name: "pgadmin-service"
          port: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: pgadmin-service
spec:
 ports:
 - protocol: TCP
   port: 80
   targetPort: http
 selector:
   app: pgadmin
 type: NodePort
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: "{{ .Release.Namespace }}"
  name: pgadmin
spec:
 serviceName: pgadmin-service
 podManagementPolicy: Parallel
 replicas: 1
 updateStrategy:
   type: RollingUpdate
 selector:
   matchLabels:
     app: pgadmin
 template:
   metadata:
     labels:
       app: pgadmin
   spec:
     terminationGracePeriodSeconds: 10
     containers:
       - name: pgadmin
         image: dpage/pgadmin4:8
         imagePullPolicy: Always
         env:
         - name: PGADMIN_DEFAULT_EMAIL
           value: user@domain.com
         - name: PGADMIN_DEFAULT_PASSWORD
           valueFrom:
              secretKeyRef:
                name: pgadmin
                key: password
         ports:
         - name: http
           containerPort: 80
           protocol: TCP
         volumeMounts:
         - name: pgadmin-config
           mountPath: /pgadmin4/config_distro.py
           subPath: config_distro.py
           #readOnly: true
        #  - name: pgadmin-config
        #    mountPath: /pgadmin4/servers.json
        #    subPath: servers.json
        #    readOnly: true
        #  - name: pgadmin-data
        #    mountPath: /var/lib/pgadmin
     volumes:
     - name: pgadmin-config
       configMap:
         name: pgadmin-config
#  volumeClaimTemplates:
#  - metadata:
#      name: pgadmin-data
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 3Gi
